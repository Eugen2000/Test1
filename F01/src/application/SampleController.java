package application;

import javafx.fxml.FXML;

import javafx.scene.control.Button;

import javafx.scene.input.MouseDragEvent;

import javafx.scene.input.MouseEvent;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.canvas.Canvas;

import javafx.scene.input.DragEvent;
import javafx.scene.input.MouseButton;

public class SampleController {
	@FXML
	private Canvas CanvFX;
	@FXML
	private Button but;
	@FXML
	private Button but1;
	@FXML
	private Button but2;

//--------------------------------------------------------------------------
	@FXML
	public void onMouseDragged(MouseEvent event) {
		// TODO Autogenerated
		//System.out.println("MouseD"+event.getButton().toString());
		System.out.println("Mouse "+event.getButton().toString()+" Pos=("+event.getX()+","+event.getY()+")");
		if(event.getButton()==MouseButton.PRIMARY){
			ShowDotG(event.getX(),event.getY(),Color.BLACK);
		}	
	}
	
	class myDot{
		private int dotX,dotY;
		private Color dotColor=Color.TRANSPARENT;
		private int neighbors=-1;
		private boolean exists=false;
	}
	
	private int dotX,dotY;
	private double curX=0,curY=0;
	private double dotSize=30;
	private double dotSpace=10;
	private Color  defaultDotBodyColor=Color.RED;
	private Color  defaultDotBorderColor=Color.BLACK;
	
	private int numDotX;
	private int numDotY;
	private myDot[][] myDots;
	//private myDot testDot;
	//private double curX=0,curY=0;
	
	private int getAbsoluteDotPosX(int x){
		return x*(int)(dotSize+dotSpace);
	}
	
	private int getAbsoluteDotPosY(int y){
		return y*(int)(dotSize+dotSpace);
	}

	private void surroundtDotNeighbors(int x,int y){
		for(int ik=1;ik<=3;ik++){
			for(int jk=1;jk<=3;jk++){
				if(ik!=jk){
					myDots[x-2+ik][x-2+jk].neighbors++;
				}												
			}
		}
	}
	
	private void filltDotNeighbors(){
		for(int i=0;i<numDotX;i++){
			for(int j=0;j<numDotY;j++){
				myDots[i][j].neighbors=0;
				CanvFX.getGraphicsContext2D().strokeText(((Integer)myDots[i][j].neighbors).toString(),
						getAbsoluteDotPosX(i)+dotSize/2-5,
						getAbsoluteDotPosY(j)+dotSize/2);

			}
		}	
		
		for(int i=1;i<numDotX-1;i++){
			for(int j=1;j<numDotY-1;j++){
				surroundtDotNeighbors(i,j);
//				CanvFX.getGraphicsContext2D().strokeText(((Integer)myDots[i][j].neighbors).toString(),
//						getAbsoluteDotPosX(i)+dotSize/2-5,
//						getAbsoluteDotPosY(j)+dotSize/2);
			}
		}
		
	}
		
	
	private void ShowGeneration(Color c){
		//CanvFX.getGraphicsContext2D().setFill(c);
		filltDotNeighbors();
		for(int i=0;i<numDotX;i++){
			for(int j=0;j<numDotY;j++){
				if(myDots[i][j].exists){
					//CanvFX.getGraphicsContext2D().setFill(defaultDotBorderColor);
					//CanvFX.getGraphicsContext2D().fillRect(i*dotSize,j*dotSize,dotSize,dotSize);
					CanvFX.getGraphicsContext2D().setFill(myDots[i][j].dotColor);
					CanvFX.getGraphicsContext2D().fillRect(
							getAbsoluteDotPosX(i),
							getAbsoluteDotPosY(j),
							dotSize,
							dotSize);
					CanvFX.getGraphicsContext2D().setFont(Font.font(14));
					CanvFX.getGraphicsContext2D().strokeText(((Integer)myDots[i][j].neighbors).toString(),
							getAbsoluteDotPosX(i)+dotSize/2-5,
							getAbsoluteDotPosY(j)+dotSize/2);
				}
			}
		}
	}

	private void ClearGeneration(){
		CanvFX.getGraphicsContext2D().setFill(Color.TRANSPARENT);
		for(int i=0;i<numDotX;i++){
			for(int j=0;j<numDotY;j++){
				if(myDots[i][j].exists){
					CanvFX.getGraphicsContext2D().clearRect(
							getAbsoluteDotPosX(i),
							getAbsoluteDotPosY(j),
							dotSize,
							dotSize);
	//				CanvFX.getGraphicsContext2D().clearRect(0, 0, CanvFX.getWidth(), CanvFX.getHeight());
					myDots[i][j].exists=false;
				}
			}
		}
	}

	private void ShowDotG(double x, double y,Color c) {
			// TODO Auto-generated method stub
			CanvFX.getGraphicsContext2D().setFill(c);
			dotX=(int)(x/(dotSize+dotSpace));
			dotY=(int)(y/(dotSize+dotSpace));
			CanvFX.getGraphicsContext2D().fillRect(
					getAbsoluteDotPosX(dotX),
					getAbsoluteDotPosY(dotY),
					dotSize,
					dotSize);
			myDots[dotX][dotY].exists=true;
			myDots[dotX][dotY].dotX=dotX;
			myDots[dotX][dotY].dotY=dotY;
			myDots[dotX][dotY].neighbors=-1;
			myDots[dotX][dotY].dotColor=this.defaultDotBodyColor;
	
	/*
	 		boolean delta=Math.abs(curX-x)>dotSize | Math.abs(curY-y)>dotSize;
			double deltaX=Math.abs(curX-x);
			double deltaY=Math.abs(curY-y);
			System.out.printf("mouse  (%g %g) curre ( %g %g)  ( %g %g) %g %b\n",x,y,curX,curY, deltaX, deltaY,dotSize, delta);
			if(! myDots[(int)(x/dotSize)][(int)(x/dotSize)].exists)
			{
				CanvFX.getGraphicsContext2D().fillRect(curX, curY, dotSize, dotSize);			
			}
			if(Math.abs(curX-x)>dotSize | Math.abs(curY-y)>dotSize){
				System.out.printf("------------------------------- %g %g \n",x,y);
				curX=((int)(x/dotSize))*dotSize;
				curY=((int)(y/dotSize))*dotSize;
				CanvFX.getGraphicsContext2D().fillRect(curX, curY, dotSize, dotSize);
			}
			//CanvFX.getGraphicsContext2D().clearRect(0, 0, CanvFX.getWidth(), CanvFX.getHeight());
	*/	
	}
	// Event Listener on ImageView.onMouseClicked
	@FXML
	public void onMonkey(MouseEvent event) {
		// TODO Autogenerated
		if(event.getButton()==MouseButton.PRIMARY){
			System.out.println("LeftMonkey");
		}
		if(event.getButton()==MouseButton.SECONDARY){
			System.out.println("RightMonkey");
		}
	}
	// Event Listener on Button[#but].onMouseClicked
	@FXML
	public void onBut(MouseEvent event) {
		// TODO Autogenerated
		System.out.println("ButClick");
		CanvFX.getGraphicsContext2D().clearRect(0, 0, CanvFX.getWidth(), CanvFX.getHeight());
	}

	@FXML
	public void onBut1(MouseEvent event) {
		// TODO Autogenerated
		System.out.println("But1Click");
		ShowGeneration(Color.BLUEVIOLET);
		//		CanvFX.getGraphicsContext2D().clearRect(0, 0, CanvFX.getWidth(), CanvFX.getHeight());
	}

	@FXML
	public void onBut2(MouseEvent event) {
		// TODO Autogenerated
		System.out.println("But2Click");
		ClearGeneration();
		//		CanvFX.getGraphicsContext2D().clearRect(0, 0, CanvFX.getWidth(), CanvFX.getHeight());
	}
//------------------------------------------------------------------------------
	 @FXML
    public void initialize() {
			System.out.println("init");
			numDotX=(int)CanvFX.getWidth();
			numDotX=(int) (((int)CanvFX.getWidth())/(dotSize+dotSpace));
			numDotY=(int) (((int)CanvFX.getHeight())/(dotSize+dotSpace));
			myDots=new myDot[numDotX][numDotY];
			for(int i=0;i<numDotX;i++){
				for(int j=0;j<numDotY;j++){
					myDots[i][j]=new myDot();
				}
			}
			//CanvFX.getGraphicsContext2D().clearRect(0, 0, CanvFX.getWidth(), CanvFX.getHeight());
	 }	

	public SampleController(){
		System.out.println("Constr");
	}

//------------------------------------------------------------------------------

}
